image: Visual Studio 2015

platform:
  - x64

environment:
  matrix:
    - nodejs_version: 10.6.0
      yarn_version: 1.7.0

cache:
  - node_modules -> yarn.lock
  - '%USERPROFILE%\.electron -> yarn.lock'

init:
  - git config --global core.autocrlf input

install:
  - ps: Update-NodeJsInstallation $env:nodejs_version $env:PLATFORM
  - ps: appveyor-retry choco install yarn -y --force --no-progress --ignore-dependencies --version $env:yarn_version
  - node --version
  - yarn --version
  - yarn --frozen-lockfile --non-interactive

build: off

test_script:
  - yarn lint:js
  - yarn test

after_test:
  - yarn cross-env NODE_ENV=production ember electron:build -e production
  - ps: |
      $path = Join-Path -Path "$env:TMP" -ChildPath csc.p12
      [IO.File]::WriteAllBytes($path, [Convert]::FromBase64String($env:CSC_LINK))
      Set-AppveyorBuildVariable -Name 'CSC_LINK' -Value $path
  - yarn cross-env NODE_ENV=production ember electron:package -e production --build-path electron-out/ember
  - yarn cross-env NODE_ENV=production ember electron:make -e production --skip-package
  - ps: Remove-Item env:CSC_KEY_PASSWORD
  - ps: Remove-Item -Path $env:CSC_LINK
  - ps: 7z a -bd electron-out.zip electron-out

artifacts:
- path: electron-out.zip
  name: electron-out
- path: electron-out\make\*.zip
  name: zip
- path: electron-out\make\squirrel.windows\$(PLATFORM)\*.exe
  name: exe

before_deploy:
  - ps: |
      $package = Get-Content -Raw -Path package.json | ConvertFrom-Json
      Set-AppveyorBuildVariable -Name 'PRODUCT_NAME' -Value $package.productName
      Set-AppveyorBuildVariable -Name 'TAG_VERSION' -Value $env:APPVEYOR_REPO_TAG_NAME.Substring(1)

deploy:
  - provider: GitHub
    auth_token: $(GITHUB_TOKEN)
    tag: $(APPVEYOR_REPO_TAG_NAME)
    release: $(PRODUCT_NAME) $(TAG_VERSION)
    artifact: zip, exe
    draft: true
    prerelease: true
    force_update: true
    on:
      APPVEYOR_REPO_TAG: true
